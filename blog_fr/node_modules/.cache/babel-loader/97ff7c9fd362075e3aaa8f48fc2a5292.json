{"ast":null,"code":"import axios from 'axios';\nimport { get, set, unset } from 'lodash';\nexport class XhrClient {\n  constructor() {\n    this.client = axios.create({\n      baseURL: 'http://127.0.0.1:3004/api',\n      headers: {\n        'Access-Control-Allow-Origin': '*'\n      }\n    });\n    const interceptorsConfiguration = [config => config, error => {\n      switch (get(error, 'response.status', 200)) {\n        case 401:\n          window.location = '/';\n          break;\n\n        case 403:\n          window.location = '/';\n          break;\n      }\n\n      return Promise.reject(error);\n    }];\n    this.client.interceptors.request.use(...interceptorsConfiguration);\n    this.client.interceptors.response.use(...interceptorsConfiguration);\n  }\n\n  setCSRF(token) {\n    set(this.client, \"defaults.headers.common['X-Csrf-Token']\", token);\n  }\n\n  setHeader(header, value) {\n    set(this.client, \"defaults.headers.common['\".concat(header, \"']\"), value);\n  }\n\n  get(path, params) {\n    return this.client.get(path, params);\n  }\n\n  post(path, data) {\n    return this.client.post(path, data);\n  }\n\n  put(path, data) {\n    return this.client.put(path, data);\n  }\n\n  delete(path) {\n    return this.client.delete(path);\n  }\n\n}\nexport default new XhrClient();","map":{"version":3,"sources":["/home/temkarus0070/Blog_project/blog_fr/src/services/api/configuration/client.js"],"names":["axios","get","set","unset","XhrClient","constructor","client","create","baseURL","headers","interceptorsConfiguration","config","error","window","location","Promise","reject","interceptors","request","use","response","setCSRF","token","setHeader","header","value","path","params","post","data","put","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,QAAgC,QAAhC;AAEA,OAAO,MAAMC,SAAN,CAAe;AAClBC,EAAAA,WAAW,GAAG;AACV,SAAKC,MAAL,GAAYN,KAAK,CAACO,MAAN,CACR;AACIC,MAAAA,OAAO,EAAE,2BADb;AAEIC,MAAAA,OAAO,EAAC;AACJ,uCAA8B;AAD1B;AAFZ,KADQ,CAAZ;AAQA,UAAMC,yBAAyB,GAAC,CAC5BC,MAAM,IAAEA,MADoB,EAE5BC,KAAK,IAAI;AACT,cAAQX,GAAG,CAACW,KAAD,EAAO,iBAAP,EAAyB,GAAzB,CAAX;AACI,aAAK,GAAL;AACIC,UAAAA,MAAM,CAACC,QAAP,GAAgB,GAAhB;AACA;;AACJ,aAAK,GAAL;AACID,UAAAA,MAAM,CAACC,QAAP,GAAgB,GAAhB;AACA;AANR;;AAQA,aAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACC,KAZ2B,CAAhC;AAeA,SAAKN,MAAL,CAAYW,YAAZ,CAAyBC,OAAzB,CAAiCC,GAAjC,CAAqC,GAAGT,yBAAxC;AACA,SAAKJ,MAAL,CAAYW,YAAZ,CAAyBG,QAAzB,CAAkCD,GAAlC,CAAsC,GAAGT,yBAAzC;AACH;;AAEDW,EAAAA,OAAO,CAACC,KAAD,EAAO;AACVpB,IAAAA,GAAG,CAAC,KAAKI,MAAN,6CAAuDgB,KAAvD,CAAH;AACH;;AAEDC,EAAAA,SAAS,CAACC,MAAD,EAAQC,KAAR,EAAc;AACnBvB,IAAAA,GAAG,CAAC,KAAKI,MAAN,qCAAyCkB,MAAzC,SAAoDC,KAApD,CAAH;AACH;;AAEDxB,EAAAA,GAAG,CAACyB,IAAD,EAAMC,MAAN,EAAa;AACZ,WAAO,KAAKrB,MAAL,CAAYL,GAAZ,CAAgByB,IAAhB,EAAqBC,MAArB,CAAP;AACH;;AAGDC,EAAAA,IAAI,CAACF,IAAD,EAAMG,IAAN,EAAW;AACX,WAAO,KAAKvB,MAAL,CAAYsB,IAAZ,CAAiBF,IAAjB,EAAsBG,IAAtB,CAAP;AACH;;AAEDC,EAAAA,GAAG,CAACJ,IAAD,EAAMG,IAAN,EAAW;AACV,WAAO,KAAKvB,MAAL,CAAYwB,GAAZ,CAAgBJ,IAAhB,EAAqBG,IAArB,CAAP;AACH;;AAEDE,EAAAA,MAAM,CAACL,IAAD,EAAM;AACR,WAAO,KAAKpB,MAAL,CAAYyB,MAAZ,CAAmBL,IAAnB,CAAP;AACH;;AApDiB;AAyDtB,eAAgB,IAAItB,SAAJ,EAAhB","sourcesContent":["import axios from 'axios';\nimport { get, set, unset } from 'lodash';\n\nexport class XhrClient{\n    constructor() {\n        this.client=axios.create(\n            {\n                baseURL: 'http://127.0.0.1:3004/api',\n                headers:{\n                    'Access-Control-Allow-Origin':'*',\n                },\n            });\n\n        const interceptorsConfiguration=[\n            config=>config,\n            error => {\n            switch (get(error,'response.status',200)) {\n                case 401:\n                    window.location='/';\n                    break;\n                case 403:\n                    window.location='/';\n                    break;\n            }\n            return Promise.reject(error);\n            },\n        ];\n\n        this.client.interceptors.request.use(...interceptorsConfiguration);\n        this.client.interceptors.response.use(...interceptorsConfiguration);\n    }\n\n    setCSRF(token){\n        set(this.client,`defaults.headers.common['X-Csrf-Token']`,token);\n    }\n\n    setHeader(header,value){\n        set(this.client,`defaults.headers.common['${header}']`,value);\n    }\n\n    get(path,params){\n        return this.client.get(path,params);\n    }\n\n\n    post(path,data){\n        return this.client.post(path,data);\n    }\n\n    put(path,data){\n        return this.client.put(path,data);\n    }\n\n    delete(path){\n        return this.client.delete(path);\n    }\n\n\n}\n\nexport default  new XhrClient();"]},"metadata":{},"sourceType":"module"}